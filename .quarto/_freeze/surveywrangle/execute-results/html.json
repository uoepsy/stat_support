{
  "hash": "dcd60431c428fb15f07412248a2b779c",
  "result": {
    "markdown": "---\ntitle: \"Data wrangling for surveys & questionnaires\"\nparams: \n    SHOW_SOLS: TRUE\n    TOGGLE: TRUE\neditor_options: \n  chunk_output_type: console\n---\n\n\n\n\n# column names\n\noften, we want easier variable names to refer to in our data\n\nfirst, let's write a little dictionary so we keep track of the current names. \n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndatadict <- \n  tibble(\n    variable = paste0(\"q\", 1:ncol(survdat)),\n    question = names(survdat)\n  )\nhead(datadict)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 2\n  variable question                                                             \n  <chr>    <chr>                                                                \n1 q1       What is your birthday month?                                         \n2 q2       On a scale of 0 to 100, how well do you tend to sleep on average? (0…\n3 q3       Describe yourself as you generally are now, not as you wish to be in…\n4 q4       Describe yourself as you generally are now, not as you wish to be in…\n5 q5       Describe yourself as you generally are now, not as you wish to be in…\n6 q6       Describe yourself as you generally are now, not as you wish to be in…\n```\n:::\n:::\n\nif you want, write this to a .csv file so that you can open it in excel and keep track (if you prefer).\n\nnow we can change the names of the variables\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nnames(survdat) <- paste0(\"q\", 1:ncol(survdat))\nsurvdat\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 76 × 59\n   q1       q2 q3    q4    q5    q6    q7    q8    q9    q10   q11   q12   q13  \n   <chr> <dbl> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr>\n 1 Dece…    73 Mode… Very… Mode… Mode… Neit… Mode… Mode… Mode… Mode… Neit… Neit…\n 2 July     NA Neit… Mode… Mode… Neit… Mode… Mode… Mode… Mode… Neit… Neit… Mode…\n 3 Nove…    75 Very… Very… Neit… Mode… Mode… Mode… Mode… Neit… Mode… Very… Mode…\n 4 Nove…    75 Very… Mode… Mode… Mode… Very… Mode… Mode… Mode… Mode… Mode… Mode…\n 5 July     66 Very… Very… Neit… Mode… Mode… Very… Neit… Neit… Mode… Mode… Neit…\n 6 May      80 Mode… Very… Mode… Very… Very… Neit… Mode… Very… Neit… Mode… Mode…\n 7 May      60 Mode… Very… Mode… Very… Mode… Mode… Mode… Mode… Neit… Mode… Neit…\n 8 Augu…    60 Mode… Neit… Very… Very… Neit… Neit… Mode… Very… Very… Neit… Mode…\n 9 July     90 Neit… Mode… Very… Very… Very… Neit… Very… Neit… Neit… Very… Mode…\n10 June     85 Neit… Very… Mode… Mode… Mode… Neit… Mode… Mode… Mode… Mode… Neit…\n# ℹ 66 more rows\n# ℹ 46 more variables: q14 <chr>, q15 <chr>, q16 <chr>, q17 <chr>, q18 <chr>,\n#   q19 <chr>, q20 <chr>, q21 <chr>, q22 <chr>, q23 <chr>, q24 <chr>,\n#   q25 <chr>, q26 <chr>, q27 <chr>, q28 <chr>, q29 <chr>, q30 <chr>,\n#   q31 <chr>, q32 <chr>, q33 <chr>, q34 <chr>, q35 <chr>, q36 <chr>,\n#   q37 <chr>, q38 <chr>, q39 <chr>, q40 <chr>, q41 <chr>, q42 <chr>,\n#   q43 <chr>, q44 <chr>, q45 <chr>, q46 <chr>, q47 <chr>, q48 <chr>, …\n```\n:::\n:::\n\n\n# replacing values and recoding\n\nfirst things first, most of the questions are scored on a 5 point likert scale. \nthe data has come out as words, but i want to treat them as numbers. \n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n```{=html}\n<div id=\"yommvporza\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#yommvporza table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#yommvporza thead, #yommvporza tbody, #yommvporza tfoot, #yommvporza tr, #yommvporza td, #yommvporza th {\n  border-style: none;\n}\n\n#yommvporza p {\n  margin: 0;\n  padding: 0;\n}\n\n#yommvporza .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#yommvporza .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#yommvporza .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#yommvporza .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#yommvporza .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#yommvporza .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#yommvporza .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#yommvporza .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#yommvporza .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#yommvporza .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#yommvporza .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#yommvporza .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#yommvporza .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#yommvporza .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#yommvporza .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#yommvporza .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#yommvporza .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#yommvporza .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#yommvporza .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#yommvporza .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#yommvporza .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#yommvporza .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#yommvporza .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#yommvporza .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#yommvporza .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#yommvporza .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#yommvporza .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#yommvporza .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#yommvporza .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#yommvporza .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#yommvporza .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#yommvporza .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#yommvporza .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#yommvporza .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#yommvporza .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#yommvporza .gt_left {\n  text-align: left;\n}\n\n#yommvporza .gt_center {\n  text-align: center;\n}\n\n#yommvporza .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#yommvporza .gt_font_normal {\n  font-weight: normal;\n}\n\n#yommvporza .gt_font_bold {\n  font-weight: bold;\n}\n\n#yommvporza .gt_font_italic {\n  font-style: italic;\n}\n\n#yommvporza .gt_super {\n  font-size: 65%;\n}\n\n#yommvporza .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#yommvporza .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#yommvporza .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#yommvporza .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#yommvporza .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#yommvporza .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#yommvporza .gt_indent_5 {\n  text-indent: 25px;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    \n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"response\">response</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"score\">score</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"response\" class=\"gt_row gt_left\">Very Inaccurate</td>\n<td headers=\"score\" class=\"gt_row gt_right\">1</td></tr>\n    <tr><td headers=\"response\" class=\"gt_row gt_left\">Moderately Inaccurate</td>\n<td headers=\"score\" class=\"gt_row gt_right\">2</td></tr>\n    <tr><td headers=\"response\" class=\"gt_row gt_left\">Neither Accurate nor Inaccurate</td>\n<td headers=\"score\" class=\"gt_row gt_right\">3</td></tr>\n    <tr><td headers=\"response\" class=\"gt_row gt_left\">Moderately Accurate</td>\n<td headers=\"score\" class=\"gt_row gt_right\">4</td></tr>\n    <tr><td headers=\"response\" class=\"gt_row gt_left\">Very Accurate</td>\n<td headers=\"score\" class=\"gt_row gt_right\">5</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n:::\n:::\n\n\nlet's see how we can do it for one question first: \nthe `recode()` function can be very useful, but there are lots of other approaches\n\n\n\n::::panelset\n:::panel\n#### recode\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nsurvdat %>% \n  mutate(\n    q3 = recode(q3, \n                \"Very Inaccurate\" = 1,\n                \"Moderately Inaccurate\" = 2,\n                \"Neither Accurate nor Inaccurate\" = 3,\n                \"Moderately Accurate\" = 4,\n                \"Very Accurate\" = 5)\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 76 × 59\n   q1       q2    q3 q4    q5    q6    q7    q8    q9    q10   q11   q12   q13  \n   <chr> <dbl> <dbl> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr>\n 1 Dece…    73     4 Very… Mode… Mode… Neit… Mode… Mode… Mode… Mode… Neit… Neit…\n 2 July     NA     3 Mode… Mode… Neit… Mode… Mode… Mode… Mode… Neit… Neit… Mode…\n 3 Nove…    75     1 Very… Neit… Mode… Mode… Mode… Mode… Neit… Mode… Very… Mode…\n 4 Nove…    75     1 Mode… Mode… Mode… Very… Mode… Mode… Mode… Mode… Mode… Mode…\n 5 July     66     1 Very… Neit… Mode… Mode… Very… Neit… Neit… Mode… Mode… Neit…\n 6 May      80     4 Very… Mode… Very… Very… Neit… Mode… Very… Neit… Mode… Mode…\n 7 May      60     2 Very… Mode… Very… Mode… Mode… Mode… Mode… Neit… Mode… Neit…\n 8 Augu…    60     2 Neit… Very… Very… Neit… Neit… Mode… Very… Very… Neit… Mode…\n 9 July     90     3 Mode… Very… Very… Very… Neit… Very… Neit… Neit… Very… Mode…\n10 June     85     3 Very… Mode… Mode… Mode… Neit… Mode… Mode… Mode… Mode… Neit…\n# ℹ 66 more rows\n# ℹ 46 more variables: q14 <chr>, q15 <chr>, q16 <chr>, q17 <chr>, q18 <chr>,\n#   q19 <chr>, q20 <chr>, q21 <chr>, q22 <chr>, q23 <chr>, q24 <chr>,\n#   q25 <chr>, q26 <chr>, q27 <chr>, q28 <chr>, q29 <chr>, q30 <chr>,\n#   q31 <chr>, q32 <chr>, q33 <chr>, q34 <chr>, q35 <chr>, q36 <chr>,\n#   q37 <chr>, q38 <chr>, q39 <chr>, q40 <chr>, q41 <chr>, q42 <chr>,\n#   q43 <chr>, q44 <chr>, q45 <chr>, q46 <chr>, q47 <chr>, q48 <chr>, …\n```\n:::\n:::\n\n:::\n:::panel\n#### ifelse\nmuch more cumbersome as it requires multiple nested ifelse statements:\nalso, to ensure that anyhing that isn't one of the 5 valid response options gets to be an NA, we have the final \"else\" specifying that if it's none of the prespecified options, make it an NA\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nsurvdat %>% \n  mutate(\n    q3 = ifelse(q3 == \"Very Inaccurate\", 1,\n                ifelse(q3 == \"Moderately Inaccurate\", 2, \n                       ifelse( q3 == \"Neither Accurate nor Inaccurate\", 3, \n                               ifelse(q3 == \"Moderately Accurate\", 4, \n                                      ifelse(q3 == \"Very Accurate\", 5, NA)))))\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 76 × 59\n   q1       q2    q3 q4    q5    q6    q7    q8    q9    q10   q11   q12   q13  \n   <chr> <dbl> <dbl> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr>\n 1 Dece…    73     4 Very… Mode… Mode… Neit… Mode… Mode… Mode… Mode… Neit… Neit…\n 2 July     NA     3 Mode… Mode… Neit… Mode… Mode… Mode… Mode… Neit… Neit… Mode…\n 3 Nove…    75     1 Very… Neit… Mode… Mode… Mode… Mode… Neit… Mode… Very… Mode…\n 4 Nove…    75     1 Mode… Mode… Mode… Very… Mode… Mode… Mode… Mode… Mode… Mode…\n 5 July     66     1 Very… Neit… Mode… Mode… Very… Neit… Neit… Mode… Mode… Neit…\n 6 May      80     4 Very… Mode… Very… Very… Neit… Mode… Very… Neit… Mode… Mode…\n 7 May      60     2 Very… Mode… Very… Mode… Mode… Mode… Mode… Neit… Mode… Neit…\n 8 Augu…    60     2 Neit… Very… Very… Neit… Neit… Mode… Very… Very… Neit… Mode…\n 9 July     90     3 Mode… Very… Very… Very… Neit… Very… Neit… Neit… Very… Mode…\n10 June     85     3 Very… Mode… Mode… Mode… Neit… Mode… Mode… Mode… Mode… Neit…\n# ℹ 66 more rows\n# ℹ 46 more variables: q14 <chr>, q15 <chr>, q16 <chr>, q17 <chr>, q18 <chr>,\n#   q19 <chr>, q20 <chr>, q21 <chr>, q22 <chr>, q23 <chr>, q24 <chr>,\n#   q25 <chr>, q26 <chr>, q27 <chr>, q28 <chr>, q29 <chr>, q30 <chr>,\n#   q31 <chr>, q32 <chr>, q33 <chr>, q34 <chr>, q35 <chr>, q36 <chr>,\n#   q37 <chr>, q38 <chr>, q39 <chr>, q40 <chr>, q41 <chr>, q42 <chr>,\n#   q43 <chr>, q44 <chr>, q45 <chr>, q46 <chr>, q47 <chr>, q48 <chr>, …\n```\n:::\n:::\n\n:::\n\n:::panel\n#### case_when\n\nthe final entry here `TRUE ~ NA_real_` is a bit like saying \"and if it is anything else, make it an NA\". \n- note we need to specify the _type_ of NA - i.e. because we are making all of the entries numbers, it needs to be NA_real_. If were were making them characters, it would need to be NA_character\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nsurvdat %>% \n  mutate(\n    q3 = case_when(\n      q3 == \"Very Inaccurate\" ~ 1,\n      q3 == \"Moderately Inaccurate\" ~ 2,\n      q3 == \"Neither Accurate nor Inaccurate\" ~ 3,\n      q3 == \"Moderately Accurate\" ~ 4,\n      q3 == \"Very Accurate\" ~ 5,\n      TRUE ~ NA_real_\n    )\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 76 × 59\n   q1       q2    q3 q4    q5    q6    q7    q8    q9    q10   q11   q12   q13  \n   <chr> <dbl> <dbl> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr>\n 1 Dece…    73     4 Very… Mode… Mode… Neit… Mode… Mode… Mode… Mode… Neit… Neit…\n 2 July     NA     3 Mode… Mode… Neit… Mode… Mode… Mode… Mode… Neit… Neit… Mode…\n 3 Nove…    75     1 Very… Neit… Mode… Mode… Mode… Mode… Neit… Mode… Very… Mode…\n 4 Nove…    75     1 Mode… Mode… Mode… Very… Mode… Mode… Mode… Mode… Mode… Mode…\n 5 July     66     1 Very… Neit… Mode… Mode… Very… Neit… Neit… Mode… Mode… Neit…\n 6 May      80     4 Very… Mode… Very… Very… Neit… Mode… Very… Neit… Mode… Mode…\n 7 May      60     2 Very… Mode… Very… Mode… Mode… Mode… Mode… Neit… Mode… Neit…\n 8 Augu…    60     2 Neit… Very… Very… Neit… Neit… Mode… Very… Very… Neit… Mode…\n 9 July     90     3 Mode… Very… Very… Very… Neit… Very… Neit… Neit… Very… Mode…\n10 June     85     3 Very… Mode… Mode… Mode… Neit… Mode… Mode… Mode… Mode… Neit…\n# ℹ 66 more rows\n# ℹ 46 more variables: q14 <chr>, q15 <chr>, q16 <chr>, q17 <chr>, q18 <chr>,\n#   q19 <chr>, q20 <chr>, q21 <chr>, q22 <chr>, q23 <chr>, q24 <chr>,\n#   q25 <chr>, q26 <chr>, q27 <chr>, q28 <chr>, q29 <chr>, q30 <chr>,\n#   q31 <chr>, q32 <chr>, q33 <chr>, q34 <chr>, q35 <chr>, q36 <chr>,\n#   q37 <chr>, q38 <chr>, q39 <chr>, q40 <chr>, q41 <chr>, q42 <chr>,\n#   q43 <chr>, q44 <chr>, q45 <chr>, q46 <chr>, q47 <chr>, q48 <chr>, …\n```\n:::\n:::\n\n:::\n\n\n::::\n\n## reverse coding\n\ntidyverse\nbase\n\n\n\n# applying the same operation across variables\n\ntidyverse\nbase\n\ncheck!\n\n\n\n\n# rowwise metrics\n\ncounting NAs\n\n\n# row scoring\n\nrowsums rowmeans\nNAs\n\nlink reliability\n\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"site_libs/panelset-0.2.6/panelset.css\" rel=\"stylesheet\" />\r\n<script src=\"site_libs/panelset-0.2.6/panelset.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}