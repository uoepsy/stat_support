pivot_longer(2:21) %>%
ggplot(., aes(x=z,y=value,col=name))+
geom_line(lwd=1) + p1
plotdat = tibble(
item = rep(1:4,e=100),
z = rep(z, 4),
y = z * sqrt(VarCorr(mmod)$id[[1]])
)
# LETS DO THIS EVEN MORE MANUALLY
tibble(
item = rep(1:20,e=100),
z = rep(z, 20),
y = z * sqrt(VarCorr(mmod)$id[[1]]),
) %>%
mutate(
coef = map_dbl(item, ~fixed(mmod)[.])
)
tibble(
item = rep(1:20,e=100),
z = rep(z, 20),
y = z * sqrt(VarCorr(mmod)$id[[1]]),
)
tibble(
item = rep(1:20,e=100),
z = rep(z, 20),
y = z * sqrt(VarCorr(mmod)$id[[1]]),
) %>%
mutate(
coef = map_dbl(item, ~fixed(mmod)[[.]])
)
tibble(
item = rep(1:20,e=100),
z = rep(z, 20),
y = z * sqrt(VarCorr(mmod)$id[[1]]),
) %>%
mutate(
coef = map_dbl(item, ~.)
)
tibble(
item = rep(1:20,e=100),
z = rep(z, 20),
y = z * sqrt(VarCorr(mmod)$id[[1]]),
) %>%
mutate(
coef = map_dbl(item, ~fixef(mmod)[.])
)
# LETS DO THIS EVEN MORE MANUALLY
tibble(
item = rep(1:20,e=100),
z = rep(z, 20),
y = z * sqrt(VarCorr(mmod)$id[[1]]),
) %>%
mutate(
coef = map_dbl(item, ~fixef(mmod)[.]),
y = y + coef,
p = plogis(y)
) %>%
ggplot(., aes(x=z,y=p,col=factor(item)))+
geom_line()
betas <- irt_rasch1$coefficients
# plot across z
z = seq(-4,4,length.out=100)
logits = cbind(1,z) %*% t(betas)
plogis(logits)
# get discrimination
inf = betas[1, 2]^2 * plogis(logits) * (1 - plogis(logits))
plotdat  = cbind(z, inf)
as_tibble(plotdat) %>%
pivot_longer(2:5) %>%
ggplot(., aes(x=z,y=value,col=name))+
geom_line(lwd=1)
as_tibble(plotdat) %>%
pivot_longer(2:21) %>%
ggplot(., aes(x=z,y=value,col=name))+
geom_line(lwd=1)
irt_2pm_par1 = ltm(abdat ~ z1, IRT.param=F)
irt_2pm_par2 = ltm(abdat ~ z1, IRT.param=T)
irt_2pm_par1 = ltm(mcq[,-1] ~ z1, IRT.param=F)
irt_2pm_par2 = ltm(mcq[,-1] ~ z1, IRT.param=T)
# here are the item coefficients
betas <- irt_2pm_par1$coefficients
# plot across z
z = seq(-4,4,length.out=100)
logits = cbind(1,z) %*% t(betas)
plotdat = cbind(z,plogis(logits))
as_tibble(plotdat) %>%
pivot_longer(2:5) %>%
ggplot(., aes(x=z,y=value,col=name))+
geom_line(lwd=1)
as_tibble(plotdat) %>%
pivot_longer(2:21) %>%
ggplot(., aes(x=z,y=value,col=name))+
geom_line(lwd=1)
betas <- irt_2pm_par2$coefficients
# plot across z
z = seq(-4,4,length.out=100)
pi = plogis(cbind(1,z) %*% t(betas))
# get discrimination
discrim = betas[,2]^2
pr = pi * (1-pi)
for(d in 1:length(discrim)){
pr[,d] = pr[,d]*discrim[d]
}
as_tibble(plotdat) %>%
pivot_longer(2:21) %>%
ggplot(., aes(x=z,y=value,col=name))+
geom_line(lwd=1)
betas <- irt_2pm_par2$coefficients
# plot across z
z = seq(-4,4,length.out=100)
pi = plogis(cbind(1,z) %*% t(betas))
# get discrimination
discrim = betas[,2]^2
pr = pi * (1-pi)
for(d in 1:length(discrim)){
pr[,d] = pr[,d]*discrim[d]
}
plotdat  = cbind(z, pr)
as_tibble(plotdat) %>%
pivot_longer(2:21) %>%
ggplot(., aes(x=z,y=value,col=name))+
geom_line(lwd=1)
# here are the item coefficients
betas <- irt_2pm_par1$coefficients
# plot across z
z = seq(-4,4,length.out=100)
logits = cbind(1,z) %*% t(betas)
plotdat = cbind(z,plogis(logits))
as_tibble(plotdat) %>%
pivot_longer(2:21) %>%
ggplot(., aes(x=z,y=value,col=name))+
geom_line(lwd=1)
irt_2pm_par1
mmod = glmer(value ~ -1 + name + (1 + name |id), mcqlong, family="binomial",
control = glmerControl(optimizer="bobyqa"))
mmod = glmer(value ~ -1 + name + (1 |id) + (name | id), mcqlong, family="binomial",
control = glmerControl(optimizer="bobyqa"))
mmod = glmer(value ~ -1 + (1|name) + (1 |id), mcqlong, family="binomial",
control = glmerControl(optimizer="bobyqa"))
summary(mmod)
mmod = glmer(value ~ -1 + (1 |id) + (1|name), mcqlong, family="binomial",
control = glmerControl(optimizer="bobyqa"))
mmod
ranef(mmod)
ranef(mmod)$name
cbind(ranef(mmod)$name[,1], sqrt(VarCorr(mmod)$id[[1]]) )
betas <- cbind(ranef(mmod)$name[,1], sqrt(VarCorr(mmod)$id[[1]]) )
# plot across z
z = seq(-4,4,length.out=100)
# as before
logits = cbind(1,z) %*% t(betas)
cbind(z,plogis(logits)) %>%
as_tibble %>%
pivot_longer(2:21) %>%
ggplot(., aes(x=z,y=value,col=name))+
geom_line(lwd=1)
# as before
logits = cbind(1,z) %*% t(betas)
cbind(z,plogis(logits)) %>%
as_tibble
mmod = glmer(value ~ -1 + (1 |id) + (1|name), mcqlong, family="binomial",
control = glmerControl(optimizer="bobyqa"))
cbind(ranef(mmod)$name[,1], sqrt(VarCorr(mmod)$id[[1]]) )
mmod = glmer(value ~ -1 + name +  (1 |id) + (1|name), mcqlong, family="binomial",
control = glmerControl(optimizer="bobyqa"))
mmod = glmer(value ~ -1 + name +  (1 |name/id), mcqlong, family="binomial",
control = glmerControl(optimizer="bobyqa"))
mmod = glmer(value ~ -1 + (1 |name/id), mcqlong, family="binomial",
control = glmerControl(optimizer="bobyqa"))
ranef(mmod)$name[,1]
ranef(mmod)
mmod = glmer(value ~ -1 + name*(1 | id), mcqlong, family="binomial",
control = glmerControl(optimizer="bobyqa"))
summary(mmod)
vcov(x)
vcov(mmod)
cbind(fixef(mmod), sqrt(VarCorr(mmod)$id[[1]]) )
summary(mmod)
mmod = glmer(value ~ -1 + name + (1 | id), mcqlong, family="binomial",
control = glmerControl(optimizer="bobyqa"))
summary(mmod)
mmod = glmer(value ~ -1 + name + (0 + name | id), mcqlong, family="binomial",
control = glmerControl(optimizer="bobyqa"))
mmod = glmer(value ~ -1 + name + (-1 + name | id), mcqlong, family="binomial",
control = glmerControl(optimizer="bobyqa"))
mcqlong
mcqlong %>% filter(name %in% paste0("q",10:20))
mmod = glmer(value ~ -1 + name + (-1 + name | id),
mcqlong %>% filter(name %in% paste0("q",10:20)), family="binomial",
control = glmerControl(optimizer="bobyqa"))
mmod = glmer(value ~ -1 + name + (-1 + name | id),
mcqlong %>% filter(name %in% paste0("q",10:14)), family="binomial",
control = glmerControl(optimizer="bobyqa"))
fixef(mmod)
ranef(mmod)$id[,1]
ranef(mmod)$id
ranef(mmod)$id
apply(ranef(mmod)$id,2,sd)
cbind(fixef(mmod), sqrt(apply(ranef(mmod)$id,2,sd)))
betas <- cbind(fixef(mmod), sqrt(apply(ranef(mmod)$id,2,sd)))
# plot across z
z = seq(-4,4,length.out=100)
# as before
logits = cbind(1,z) %*% t(betas)
cbind(z,plogis(logits)) %>%
as_tibble %>%
pivot_longer(2:21) %>%
ggplot(., aes(x=z,y=value,col=name))+
geom_line(lwd=1)
cbind(z,plogis(logits)) %>%
as_tibble %>%
pivot_longer(2:6) %>%
ggplot(., aes(x=z,y=value,col=name))+
geom_line(lwd=1)
mcq
mcq[,11:15]
irt_2pm_par1 = ltm(mcq[,11:15] ~ z1, IRT.param=F)
plot(irt_2pm_par1)
betas <- cbind(fixef(mmod), sqrt(apply(ranef(mmod)$id,2,sd)))
# plot across z
z = seq(-4,4,length.out=100)
# as before
logits = cbind(1,z) %*% t(betas)
cbind(z,plogis(logits)) %>%
as_tibble %>%
pivot_longer(2:6) %>%
ggplot(., aes(x=z,y=value,col=name))+
geom_line(lwd=1)
df <- read_csv("data/usrmsurvey.csv")
library(tidyverse)
df <- read_csv("data/usrmsurvey.csv")
head(df)
names(df)
df[,c(3,8,16:73)]
df[,73]
df <- df[,c(3,8,16:72)]
head(df)
write_csv(df, file="data/surveywrangle.csv")
df <- read_csv("data/surveywrangle.csv")
head(df)
colSums(is.na(df))
unname(colSums(is.na(df))_
unname(colSums(is.na(df)))
df <- read_csv("data/surveywrangle.csv")
head(df)
unname(colSums(is.na(df)))
survdat <- read_csv("data/surveywrangle.csv")
head(survdat)
question = names(survdat)
variable = paste0("q", 1:ncol(survdat)),
tibble(
variable = paste0("q", 1:ncol(survdat)),
question = names(survdat)
)
datadict <-
tibble(
variable = paste0("q", 1:ncol(survdat)),
question = names(survdat)
)
head(datadict)
names(survdat) <- paste0("q", 1:ncol(survdat))
survdat
table(survdat$q5)
cat(table(survdat$q5))
names(table(survdat$q5))
cat(names(table(survdat$q5)))
tibble(
response = c("Very Inaccurate","Moderately Inaccurate","Neither Accurate nor Inaccurate","Moderately Accurate","Very Accurate"),
score = c(1:5)
) %>% gt::gt()
?recode
survdat %>%
mutate(
q3 = case_when(
q3 == "Very Inaccurate" ~ 1,
q3 == "Moderately Inaccurate" ~ 2,
q3 == "Neither Accurate nor Inaccurate" ~ 3,
q3 == "Moderately Accurate" ~ 4,
q3 == "Very Accurate" ~ 5
)
)
survdat %>%
mutate(
q3 = case_when(
q3 == "Very Inaccurate" ~ 1,
q3 == "Moderately Inaccurate" ~ 2,
q3 == "Neither Accurate nor Inaccurate" ~ 3,
q3 == "Moderately Accurate" ~ 4,
q3 == "Very Accurate" ~ 5,
TRUE ~ NA
)
)
survdat %>%
mutate(
q3 = case_when(
q3 == "Very Inaccurate" ~ 1,
q3 == "Moderately Inaccurate" ~ 2,
q3 == "Neither Accurate nor Inaccurate" ~ 3,
q3 == "Moderately Accurate" ~ 4,
q3 == "Very Accurate" ~ 5,
TRUE ~ NA_real_
)
)
survdat %>%
mutate(
q3 = case_when(
q3 == "Very Inaccurate" ~ 1,
q3 == "Moderately Inaccurate" ~ 2,
q3 == "Neither Accurate nor Inaccurate" ~ 3,
q3 == "Moderately Accurate" ~ 4,
q3 == "Very Accurate" ~ 5
)
)
survdat %>%
mutate(
q3 = recode(q3,
"Very Inaccurate" ~ "1"
)
)
survdat %>%
mutate(
q3 = recode(q3,
"Very Inaccurate" = "1"
)
)
survdat %>%
mutate(
q3 = recode(q3,
"Very Inaccurate" = 1
)
)
survdat %>%
mutate(
q3 = recode(q3,
"Very Inaccurate" = 1,
"Moderately Inaccurate" = 2,
"Neither Accurate nor Inaccurate" = 3,
"Moderately Accurate" = 4,
"Very Accurate" = 5)
)
survdat %>%
mutate(
q3 = ifelse(q3 == "Very Inaccurate", 1,
ifelse(q3 == "Moderately Inaccurate", 2,
ifelse( q3 == "Neither Accurate nor Inaccurate", 3,
ifelse(q3 == "Moderately Accurate", 4,
ifelse(q3 == "Very Accurate", 5, NA)))))
)
survdat %>%
mutate(
q3 = case_when(
q3 == "Very Inaccurate" ~ 1,
q3 == "Moderately Inaccurate" ~ 2,
q3 == "Neither Accurate nor Inaccurate" ~ 3,
q3 == "Moderately Accurate" ~ 4,
q3 == "Very Accurate" ~ 5,
TRUE ~ NA_real_
)
)
survdat %>%
mutate(
q3 = case_when(
q3 == "Very Inaccurate" ~ "1",
q3 == "Moderately Inaccurate" ~ "2",
q3 == "Neither Accurate nor Inaccurate" ~ "3",
q3 == "Moderately Accurate" ~ "4",
q3 == "Very Accurate" ~ "5",
TRUE ~ NA_real_
)
)
survdat %>%
mutate(
q3 = case_when(
q3 == "Very Inaccurate" ~ "1",
q3 == "Moderately Inaccurate" ~ "2",
q3 == "Neither Accurate nor Inaccurate" ~ "3",
q3 == "Moderately Accurate" ~ "4",
q3 == "Very Accurate" ~ "5",
TRUE ~ NA_character_
)
)
?case_when
#| label: setup
#| include: false
source('assets/setup.R')
library(xaringanExtra)
library(tidyverse)
library(patchwork)
xaringanExtra::use_panelset()
library(tidyverse)
library(ltm)
library(lavaan)
library(lme4)
mcq <- read_csv("data/mcq.csv")
summary(mcq)
mcqlong <-
mcq %>%
pivot_longer(2:21)
mmod = glmer(value ~ -1 + name + (1 |id), mcqlong, family="binomial",
control = glmerControl(optimizer="bobyqa"))
cbind(fixef(mmod), sqrt(VarCorr(mmod)$id[[1]]) )
betas <- cbind(fixef(mmod), sqrt(VarCorr(mmod)$id[[1]]) )
# plot across z
z = seq(-4,4,length.out=100)
# as before
logits = cbind(1,z) %*% t(betas)
cbind(z,plogis(logits)) %>%
as_tibble %>%
pivot_longer(2:21) %>%
ggplot(., aes(x=z,y=value,col=name))+
geom_line(lwd=1)
mmod = glmer(value ~ -1 + (1 |id), mcqlong, family="binomial",
control = glmerControl(optimizer="bobyqa"))
cbind(fixef(mmod), sqrt(VarCorr(mmod)$id[[1]]) )
tibble(
item = rep(1:20,e=100),
z = rep(z, 20),
y = z * sqrt(VarCorr(mmod)$id[[1]]),
)
# LETS DO THIS EVEN MORE MANUALLY
# for those who don't like matrix operations
tibble(
item = rep(1:20,e=100),
z = rep(z, 20),
y = z * sqrt(VarCorr(mmod)$id[[1]]),
) %>%
mutate(
coef = map_dbl(item, ~fixef(mmod)[.]),
y = y + coef,
p = plogis(y)
) %>%
ggplot(., aes(x=z,y=p,col=factor(item)))+
geom_line()
# LETS DO THIS EVEN MORE MANUALLY
# for those who don't like matrix operations
tibble(
item = rep(1:20,e=100),
z = rep(z, 20),
y = z * sqrt(VarCorr(mmod)$id[[1]]),
) %>%
mutate(
#coef = map_dbl(item, ~fixef(mmod)[.]),
#y = y + coef,
p = plogis(y)
) %>%
ggplot(., aes(x=z,y=p,col=factor(item)))+
geom_line()
plogis(0)
install.packages("learnr")
2e5
20000000
20000000*2022
library(lavaan)
m = "
y ~.8*x1+.7*x2+.3*x3
x1~.7*y + .7*x2
"
df <- simulateData(m)
m = "
y ~x1+ x2+ x3
x1~y + x2
"
summary(lavaan(m,df))
m = "
y ~x1+ x2+ x3
x1~y
"
summary(lavaan(m,df))
m = "
y ~x1+ x2+ x3
"
summary(lavaan(m,df))
summary(sem(m,df))
summary(sem(m,df))
m = "
y ~x1+ x2+ x3
x1~y + x2
"
summary(sem(m,df))
semPlot::semPaths(sem(m,df))
m = "
y ~.8*x1+.7*x2+.3*x3
x1~-.7*y + .7*x2
"
df <- simulateData(m)
m = "
y ~x1+ x2+ x3
x1~y + x2
"
summary(sem(m,df))
semPlot::semPaths(sem(m,df))
semPlot::semPaths(sem(m,df),what="est")
data("lalonde_mis", package = "cobalt")
summary(lalonde_mis)
library(mice)
library(cobalt)
data("lalonde_mis", package = "cobalt")
summary(lalonde_mis)
library("mice")
set.seed(12345)
imp <- mice(lalonde_mis, m = 50, printFlag = FALSE)
install.packages("MatchThem")
library("MatchThem")
w.imp <- weightthem(treat ~ age + educ + race + married + nodegree +
re74 + re75, data = imp, method = "ps",
estimand = "ATT")
?weightthem
w.imp <- matchthem(treat ~ age + educ + race + married + nodegree +
re74 + re75, data = imp, method = "ps",
estimand = "ATT")
?matchthem
head(lalonde)
